/*
 * Copyright 2022 CECTC, Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package dt

import (
	"testing"

	"github.com/stretchr/testify/assert"
)

func TestRequestContextEncode(t *testing.T) {
	context := &RequestContext{
		ActionContext: map[string]string{
			VarHost: "localhost:8080",
		},
		Headers: map[string]string{
			"Accept-Encoding": "gzip",
			"Content-Length":  "45",
			"Content-Type":    "application/json",
			"Host":            "dbpack1:8080",
			"User-Agent":      "Go-http-client/1.1",
			"X-Dbpack-Xid":    "gs/service-c/72340598134611969",
		},
		Body: []byte(`{"name":"scott"}`),
	}
	data, err := context.Encode()
	assert.Nil(t, err)
	t.Log(data)
}

func TestRequestContextDecode(t *testing.T) {
	data := []byte{
		0x0, 0x0, 0x0, 0x19, 0x7b, 0x22, 0x68, 0x6f, 0x73, 0x74, 0x22, 0x3a, 0x22, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68,
		0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x22, 0x7d, 0x0, 0x0, 0x0, 0xba, 0x7b, 0x22, 0x41, 0x63, 0x63,
		0x65, 0x70, 0x74, 0x2d, 0x45, 0x6e, 0x63, 0x6f, 0x64, 0x69, 0x6e, 0x67, 0x22, 0x3a, 0x22, 0x67, 0x7a, 0x69,
		0x70, 0x22, 0x2c, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2d, 0x4c, 0x65, 0x6e, 0x67, 0x74, 0x68,
		0x22, 0x3a, 0x22, 0x34, 0x35, 0x22, 0x2c, 0x22, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x2d, 0x54, 0x79,
		0x70, 0x65, 0x22, 0x3a, 0x22, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a,
		0x73, 0x6f, 0x6e, 0x22, 0x2c, 0x22, 0x48, 0x6f, 0x73, 0x74, 0x22, 0x3a, 0x22, 0x64, 0x62, 0x70, 0x61, 0x63,
		0x6b, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x22, 0x2c, 0x22, 0x55, 0x73, 0x65, 0x72, 0x2d, 0x41, 0x67, 0x65,
		0x6e, 0x74, 0x22, 0x3a, 0x22, 0x47, 0x6f, 0x2d, 0x68, 0x74, 0x74, 0x70, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
		0x74, 0x2f, 0x31, 0x2e, 0x31, 0x22, 0x2c, 0x22, 0x58, 0x2d, 0x44, 0x62, 0x70, 0x61, 0x63, 0x6b, 0x2d, 0x58,
		0x69, 0x64, 0x22, 0x3a, 0x22, 0x67, 0x73, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2d, 0x63, 0x2f,
		0x37, 0x32, 0x33, 0x34, 0x30, 0x35, 0x39, 0x38, 0x31, 0x33, 0x34, 0x36, 0x31, 0x31, 0x39, 0x36, 0x39, 0x22,
		0x7d, 0x0, 0x0, 0x0, 0x10, 0x7b, 0x22, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x3a, 0x22, 0x73, 0x63, 0x6f, 0x74, 0x74,
		0x22, 0x7d,
	}

	context := &RequestContext{}
	err := context.Decode(data)
	assert.Nil(t, err)
	assert.Equal(t, "localhost:8080", context.ActionContext[VarHost])
	assert.Equal(t, "gs/service-c/72340598134611969", context.Headers["X-Dbpack-Xid"])
}
